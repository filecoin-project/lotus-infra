application:
  name: "storetheindex"
  labels: []
  replicas: 2
  container:
    name: application
    args:
      - daemon
    env:
      - name: STORETHEINDEX_LISTEN_ADMIN
        value: /ip4/0.0.0.0/tcp/3002
    resources:
      limits:
        cpu: 1000m
        memory: 3000Mi
      requests:
        cpu: 500m
        memory: 2000Mi
    readinessProbe:
      httpGet:
        port: finder
        path: /health
      initialDelaySeconds: 10
      failureThreshold: 3
      successThreshold: 1
      timeoutSeconds: 5
      periodSeconds: 10
    ports:
      - containerPort: 3000
        name: finder
      - containerPort: 3001
        name: ingest
      - containerPort: 3002
        name: admin
  secrets:
    - name: storetheindex-identity
      external: true
  configMaps:
    - name: storetheindex-config
      keys:
        config: |
          {
            "Version": 1,
            "Identity": {
              "PeerID": "$STORETHEINDEX_PEER_ID",
              "PrivKey": "$STORETHEINDEX_PRIVATE_KEY"
            },
            "Addresses": {
              "Admin": "/ip4/0.0.0.0/tcp/3002",
              "Finder": "/ip4/0.0.0.0/tcp/3000",
              "Ingest": "/ip4/0.0.0.0/tcp/3001",
              "P2PAddr": "/ip4/0.0.0.0/tcp/3003",
              "NoResourceManager": true
            },
            "Bootstrap": {
              "Peers": [
                "/dns4/bootstrap-0.ipfsmain.cn/tcp/34721/p2p/12D3KooWQnwEGNqcM2nAcPtRR9rAX8Hrg4k9kJLCHoTR5chJfz6d",
                "/dns4/bootstrap-3.mainnet.filops.net/tcp/1347/p2p/12D3KooWKhgq8c7NQ9iGjbyK7v7phXvG6492HQfiDaGHLHLQjk7R",
                "/dns4/bootstrap-4.mainnet.filops.net/tcp/1347/p2p/12D3KooWL6PsFNPhYftrJzGgF5U18hFoaVhfGk7xwzD8yVrHJ3Uc",
                "/dns4/bootstrap-6.mainnet.filops.net/tcp/1347/p2p/12D3KooWP5MwCiqdMETF9ub1P3MbCvQCcfconnYHbWg6sUJcDRQQ",
                "/dns4/bootstrap-7.mainnet.filops.net/tcp/1347/p2p/12D3KooWRs3aY1p3juFjPy8gPN95PEQChm2QKGUCAdcDCC4EBMKf",
                "/dns4/bootstrap-8.mainnet.filops.net/tcp/1347/p2p/12D3KooWScFR7385LTyR4zU1bYdzSiiAb5rnNABfVahPvVSzyTkR",
                "/dns4/node.glif.io/tcp/1235/p2p/12D3KooWBF8cpp65hp2u9LK5mh19x67ftAam84z9LsfaquTDSBpt",
                "/dns4/bootstrap-2.mainnet.filops.net/tcp/1347/p2p/12D3KooWEWVwHGn2yR36gKLozmb4YjDJGerotAPGxmdWZx2nxMC4",
                "/dns4/bootstrap-5.mainnet.filops.net/tcp/1347/p2p/12D3KooWLFynvDQiUpXoHroV1YxKHhPJgysQGH2k3ZGwtWzR4dFH",
                "/dns4/bootstrap-1.starpool.in/tcp/12757/p2p/12D3KooWQZrGH1PxSNZPum99M1zNvjNFM33d1AAu5DcvdHptuU7u",
                "/dns4/bootstrap-0.mainnet.filops.net/tcp/1347/p2p/12D3KooWCVe8MmsEMes2FzgTpt9fXtmCY7wrq91GRiaC8PHSCCBj",
                "/dns4/bootstrap-1.mainnet.filops.net/tcp/1347/p2p/12D3KooWCwevHg1yLCvktf2nvLu7L9894mcrJR4MsBCcm4syShVc",
                "/dns4/bootstrap-0.starpool.in/tcp/12757/p2p/12D3KooWGHpBMeZbestVEWkfdnC9u7p6uFHXL1n7m1ZBqsEmiUzz",
                "/dns4/lotus-bootstrap.ipfsforce.com/tcp/41778/p2p/12D3KooWGhufNmZHF3sv48aQeS13ng5XVJZ9E6qy2Ms4VzqeUsHk",
                "/dns4/bootstrap-1.ipfsmain.cn/tcp/34723/p2p/12D3KooWMKxMkD5DMpSWsW7dBddKxKT7L2GgbNuckz9otxvkvByP"
              ],
              "MinimumPeers": 4
            },
            "Datastore": {
              "Type": "levelds",
              "Dir": "datastore"
            },
            "Discovery": {
              "LotusGateway": "wss://api.chain.love",
              "Policy": {
                "Allow": true,
                "Except": null,
                "Publish": true,
                "PublishExcept": null,
                "RateLimit": false,
                "RateLimitExcept": null
              },
              "PollInterval": "24h0m0s",
              "PollRetryAfter": "5h0m0s",
              "PollStopAfter": "168h0m0s",
              "PollOverrides": null,
              "RediscoverWait": "5m0s",
              "Timeout": "2m0s"
            },
            "Indexer": {
              "CacheSize": 300000,
              "ValueStoreDir": "valuestore",
              "ValueStoreType": "sth",
              "GCInterval": "30m0s"
            },
            "Ingest": {
              "PubSubTopic": "/indexer/ingest/mainnet",
              "StoreBatchSize": 4096,
              "SyncTimeout": "2h0m0s",
              "IngestWorkerCount": 10
            }
          }
  services:
    - type: ClusterIP
      selector:
        app: storetheindex
        release: storetheindex-0
      ports:
        - protocol: TCP
          port: 3002
          targetPort: 3002
          name: admin
    - type: LoadBalancer
      selector:
        app: storetheindex
        release: storetheindex-0
      ports:
        - protocol: TCP
          port: 3000
          targetPort: 3000
          name: finderext
        - protocol: TCP
          port: 3001
          targetPort: 3001
          name: ingest
  service:
    enabled: true
    type: ClusterIP
    ports:
      - protocol: TCP
        port: 3000
        targetPort: 3000
        name: finder
  ingress:
    enabled: false
    class: nginx
    httpRules:
      - host: cid.contact
        path: /
        servicePort: finder
  storage:
    - mount: /data/storetheindex
      chownLotus: false
      subdirPerRelease: true
      volume:
        - name: storetheindex-repo
          persistentVolumeClaim:
            claimName: storetheindex-repo

volumeClaimTemplates:
  - metadata:
      name: storetheindex-repo
    spec:
      storageClassName: io2
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 5000Gi

initContainers:
  - name: setupconfig
    image: cmd.cat/gettext
    command:
      - bash
    args:
      - "-c"
      - |
        ORDINAL=${HOSTNAME##*-}
        PEERIDVAR="STORETHEINDEX_PEER_ID${ORDINAL}"
        PRIVKEYVAR="STORETHEINDEX_PRIVATE_KEY${ORDINAL}"
        export STORETHEINDEX_PEER_ID=${!PEERIDVAR}
        export STORETHEINDEX_PRIVATE_KEY=${!PRIVKEYVAR}
        envsubst </config/config >/data/storetheindex/config
    env:
      - name: STORETHEINDEX_PRIVATE_KEY0
        valueFrom:
          secretKeyRef:
            name: storetheindex-identity
            key: privkey0
      - name: STORETHEINDEX_PEER_ID0
        valueFrom:
          secretKeyRef:
            name: storetheindex-identity
            key: peerid0
      - name: STORETHEINDEX_PRIVATE_KEY1
        valueFrom:
          secretKeyRef:
            name: storetheindex-identity
            key: privkey1
      - name: STORETHEINDEX_PEER_ID1
        valueFrom:
          secretKeyRef:
            name: storetheindex-identity
            key: peerid1
    volumeMounts:
      - name: storetheindex-repo
        mountPath: /data/storetheindex
        subPath: ntwk-mainnet-storetheindex/storetheindex-0
      - name: storetheindex-config-volume
        mountPath: /config
